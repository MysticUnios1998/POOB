#BlueJ class context
comment0.target=Valley
comment0.text=\r\n\ Clase\ principal\ del\ proyecto\ Valley.\ Su\ objetivo\ es\ resonder\ a\ los\ \r\n\ servicios\ requeridos\ para\ realizar\ el\ simulador\ del\ problema\ F\ de\ ICPC\ 2019.\r\n\r\n\ @author\ Eduard\ Arias\r\n\ @version\ 1.0\ (2019-08-24)\r\n
comment1.params=width\ height
comment1.target=Valley(int,\ int)
comment1.text=\r\n\ Constructor\ principal\ para\ la\ clase\ valley.\r\n\ @param\ width\ ancho\ del\ simulador.\ Debe\ ser\ un\ entero\ mayor\ a\ 0.\r\n\ @param\ height\ altura\ del\ simulador.\ Debe\ ser\ un\ entero\ mayor\ a\ 0.\r\n
comment10.params=
comment10.target=java.lang.String[]\ rainFalls()
comment10.text=\r\n\ Devuelve\ los\ vi\u00F1edos\ que\ est\u00E1n\ recibiendo\ cualquier\ lluvia.\r\n\ @return\ array\ con\ los\ nombres\ identificadores\ de\ los\ vi\u00F1edos\ que\r\n\ cumplen\ la\ condici\u00F3n.\r\n
comment11.params=d
comment11.target=void\ doAction(char)
comment11.text=\r\n\ Realiza\ la\ accion\ de\ intercambio\ de\ estados\ del\ simulador.\r\n\ @param\ d\ undo\ ('U')\ o\ redo\ ('R').\r\n
comment12.params=
comment12.target=void\ makeVisible()
comment13.params=
comment13.target=void\ makeInvisible()
comment14.params=z
comment14.target=void\ zoom(char)
comment14.text=\r\n\ Realiza\ el\ zoom\ del\ simulador.\r\n\ @param\ z\ caracter\ que\ indica\ si\ es\ zoomIn\ (+)\ o\ zoomOut\ (-).\r\n
comment15.params=
comment15.target=int[][]\ vineyards()
comment15.text=\r\n\ Devuelve\ la\ informaci\u00F3n\ de\ los\ vi\u00F1edos.\r\n\ @return\ arrayMatrix\ con\ las\ coordenadas\ de\ inicio\ y\ final\ de\ cada\ vi\u00F1edo.\r\n
comment16.params=
comment16.target=int[][][]\ traps()
comment16.text=\r\n\ Devuelve\ la\ informaci\u00F3n\ de\ las\ trampas.\r\n\ @return\ arrayCube\ con\ las\ coordenadas\ de\ inicio\ y\ final\ de\ \r\n\ cada\ trampa,\ junto\ con\ las\ coordenadas\ horizontales\ de\ sus\ huecos.\r\n
comment17.params=
comment17.target=int[][][]\ rains()
comment17.text=\r\n\ Devuelve\ la\ informaci\u00F3n\ de\ las\ lluvias.\r\n\ @return\ arrayCube\ con\ las\ coordenadas\ de\ los\ puntos\ de\ recorrido\ de\ cada\ lluvia.\r\n
comment18.params=
comment18.target=void\ finish()
comment18.text=\r\n\ Finaliza\ el\ proceso\ y\ sale\ del\ simulador.\r\n
comment19.params=
comment19.target=boolean\ ok()
comment19.text=\r\n\ Verifica\ si\ se\ pudo\ realizar\ la\ \u00FAltima\ acci\u00F3n\ solicitada.\r\n\ @return\ si\ l\ \u00FAltima\ acci\u00F3n\ se\ realiz\u00F3\ con\ \u00E9xito\ o\ no.\r\n
comment2.params=name\ xi\ xf
comment2.target=void\ openYard(java.lang.String,\ int,\ int)
comment2.text=\r\n\ Coloca\ un\ nuevo\ vi\u00F1edo\ en\ el\ valle.\ Este\ debe\ estar\ "bien\ planteado"\r\n\ (que\ su\ inicio\ no\ sea\ mayor\ a\ su\ final)\ y\ no\ salirse\ del\ simulador.\r\n\ @param\ name\ color\ identificador\ del\ vi\u00F1edo.\ Colores\ v\u00E1lidos\:\ "red",\ "yellow",\ "blue",\ "green",\r\n\ "magenta",\ "orange"\ and\ "black".\r\n\ @param\ xi\ coordenada\ de\ inicio\ del\ vi\u00F1edo.\r\n\ @param\ xf\ coordenada\ de\ final\ del\ vi\u00F1edo.\r\n
comment20.params=
comment20.target=void\ prevState()
comment21.params=s
comment21.target=void\ readState(State)
comment3.params=name
comment3.target=void\ closeYard(java.lang.String)
comment3.text=\r\n\ Remueve\ un\ vi\u00F1edo\ del\ valle.\ De\ no\ existir,\ no\ hace\ nada.\r\n\ @param\ name\ color\ identificador\ del\ vi\u00F1edo\ a\ remover.\r\n
comment4.params=lowerEnd\ higherEnd
comment4.target=void\ addTrap(int[],\ int[])
comment4.text=\r\n\ Coloca\ una\ nueva\ trampa\ (techo)\ en\ el\ simulador.\ Si\ las\ posiciones\ requeridas\r\n\ se\ salen\ de\ las\ dimensiones\ del\ simulador,\ no\ hace\ nada.\r\n\ @param\ lowerEnd\ array\ con\ las\ posiciones\ iniciales.\r\n\ @param\ higherEnd\ array\ con\ las\ posiciones\ finales.\r\n
comment5.params=position
comment5.target=void\ removeTrap(int)
comment5.text=\r\n\ Remueve\ una\ lona\ del\ simulador.\ Funciona\ por\ orden\ de\ llegada.\r\n\ @param\ position\ n\u00FAmero\ de\ la\ lona\ a\ eliminar.\ Debe\ ser\ un\ entero\ mayor\ a\ 0.\r\n
comment6.params=trap\ x
comment6.target=void\ makePuncture(int,\ int)
comment6.text=\r\n\ Realiza\ una\ rotura\ en\ una\ trampa.\ De\ no\ existir\ la\ trampa\ no\ hace\ nada.\r\n\ @param\ trap\ posici\u00F3n\ en\ orden\ de\ llegada\ de\ la\ trampa\ requerida.\r\n\ Debe\ ser\ un\ entero\ mayor\ a\ 0.\r\n\ @param\ x\ posici\u00F3n\ sobre\ la\ trampa\ en\ donde\ se\ va\ a\ hacer\ el\ agujero.\r\n
comment7.params=trap\ position
comment7.target=void\ patchPuncture(int,\ int)
comment7.text=\r\n\ Repara\ un\ agujero\ de\ una\ trampa\ requerida.\ La\ trampa\ est\u00E1\ por\ orden\ de\ llegada.\r\n\ Si\ en\ la\ posici\u00F3n\ solicitada\ no\ hay\ agujero,\ se\ considera\ un\ \u00E9xito.\r\n\ @param\ trap\ posici\u00F3n\ en\ orden\ de\ llegada\ de\ la\ trampa\ requerida.\r\n\ @param\ position\ ubicaci\u00F3n\ del\ agujero\ en\ la\ trampa.\r\n
comment8.params=x
comment8.target=void\ startRain(int)
comment8.text=\r\n\ Crea\ lluvia\ en\ el\ simulador,\ iniciando\ desde\ un\ punto\ espec\u00EDfico.\r\n\ @param\ x\ posicion\ horizontal\ del\ inicio\ de\ la\ lluvia.\r\n
comment9.params=position
comment9.target=void\ stopRain(int)
comment9.text=\r\n\ Para\ la\ lluvia\ del\ simulador.\r\n\ @param\ position\ coordenada\ horizontal\ de\ la\ lluvia.\ Se\ toma\ un\ margen\ de\ 5\ pixeles.\r\n
numComments=22
